*crystalline.txt* Functions to help you make your own statusline/tabline

Author:  Roger Bongers <https://github.com/rbong>
License: Same terms as Vim itself (see |license|)

INTRODUCTION                                    *crystalline*

vim-crystalline has functions to help you make your own statusline/tabline.
It allows you to use the same syntax for creating your statusline/tabline as
Vim itself. See |'statusline'| for basic information on setting your
statusline/tabline.

SETTINGS                                        *crystalline-settings*

These global settings can be set before vim-crystalline is loaded in order to
automatically set up the statusline and tabline.

g:crystalline_statusline_fn                     *g:crystalline_statusline_fn*

The output of the given function will be used as the statusline. See
'statusline' for more information on statusline syntax.

The function should accept one or two arguments. The first argument indicates
whether the statusline is being set for the currently active window using
|:setlocal|. You can use this parameter to hide or change elements based on
inactivity. The second argument contains the width of the current window. You
can use this parameter to hide sections of the statusline based on window
width.

For convience, the statusline will be automatically updated when the mode
changes or the active window changes. If you do not need mode or active window
information in your statusline, you can use "set statusline=%!MyStatusLine()".

Since Vim does not provide an |autocommand| for mode changes but it does
update the statusline, setting the statusline via this method also triggers
the tabline to update on mode changes.

g:crystalline_tabline_fn                        *g:crystalline_tabline_fn*

The output of the given function will be used as the tabline. See 'statusline'
for more information on statusline syntax.

For convience, the tabline will be automatically updated when the mode
changes. If you do not need mode information or colors in your tabline, you
can use "set tabline=%!MyTabLine()".

g:crystalline_theme                             *g:crystalline_theme*

Automatically set the given theme.

g:crystalline_enable_sep                        *g:crystalline_enable_sep*

Enable using special separator symbols between sections/tabs, similar to
powerline.

Separators will automatically appear on the tabline using
|crystalline#bufferline()|, and can be generated for the statusline using
|crystalline#right_sep()|, |crystalline#left_sep()|,
|crystalline#right_mode_sep()|, and |crystalline#left_mode_sep()|

g:crystalline_separators                        *g:crystalline_separators*

The separator character(s) to use between sections/tabs. By default, it will
use powerline-style separators.

The setting must be a list of strings, with the first string representing the
right-facing separator and the second string representing the left-facing
separator.

g:crystalline_tab_separator                     *g:crystalline_tab_separator*

The separator character(s) to use between unselected tabs. By default, it will
use the powerline-style separator.

g:crystalline_hide_buf_tab                      *g:crystalline_hide_buf_tab*

The name of a function to determine if a buffer should be hidden from tabline
using |crystalline#bufferline()|. The function must accept one argument, the
buffer number.

Defaults to 'crystalline#hide_buf_tab', which returns true if a buffer does
not exist, it is not listed, or it is a quickfix buffer.

FUNCTIONS                                       *crystalline-functions*

crystalline#mode()                              *crystalline#mode()*

Return a statusline highlight group item and a label for the current mode. Can
be used as a mode section on the statusline or tabline.

See |crystalline-highlight-groups| for the list of mode highlight groups.

crystalline#mode_color()                        *crystalline#mode_color()*

Return a statusline highlight group item for the current mode. Can be used to
change the color of different sections of the statusline or tabline based on
the current mode.

See |crystalline-highlight-groups| for the list of mode highlight groups.

crystalline#mode_label()                        *crystalline#mode_label()*

Return a label for the current mode. Can be used to display the current mode
on the statusline or tabline.

crystalline#bufferline(items, width, show_mode) *crystalline#bufferline()*

Return a string of items which can be used on the statusline/tabline that
display the current buffers if there is only one tab, or otherwise displays
the tabs.

"items" tells the function how many items are currently in use. The
statusline/tabline can only hold 80 items.

"width" tells the functions how much width is currently in use so that it can
fit as many tabs as possible.

"show_mode" indicates if the bufferline should use the currently active mode
color for the active tab or if it should fall back to |hl-CrystallineTabSel|.
See |crystalline-highlight-groups| for the list of mode highlight groups.

crystalline#right_sep(group_a, group_b)         *crystalline#right_sep()*

Generate a right-facing separator between the two highlight groups.

Use the group names listed in |crystaline-highlight-groups|, with
"Crystalline" omitted.

crystalline#left_sep(group_a, group_b)          *crystalline#left_sep()*

Generate a left-facing separator between the two highlight groups.

See |crystalline#right_sep()|.

crystalline#right_mode_sep(group)               *crystalline#right_mode_sep()*

Generate a right-facing separator between the current mode and the given
group.

See |crystalline#right_sep()|.

crystalline#left_mode_sep(group)                *crystalline#left_mode_sep()*

Generate a left-facing separator between the given group and the current mode.

See |crystalline#right_sep()|.


HIGHLIGHT GROUPS                                *crystalline-highlight-groups*
                                                *crystalline-themes*

vim-crystalline themes define several highlight groups for use in the
statusline/tabline.

If a theme has both light and dark modes, it will look at the 'background'
setting to determine which mode it should use.

Themes are located in "autoload/crystalline/theme/theme_name.vim" files. In
order to define a theme, create one such file and define a function named
"crystalline#theme#theme_name#set_theme" which defines the given highlight
groups.

For an example of creating a custom theme, see the solarized theme:
<https://github.com/rbong/vim-crystalline/blob/master/autoload/crystalline/theme/solarized.vim>

CrystallineNormalMode                           *hl-CrystallineNormalMode*

The color of the mode label when normal mode is active.

See |crystalline#mode()|.

CrystallineInsertMode                           *hl-CrystallineInsertMode*

The color of the mode label when insert mode is active.

See |crystalline#mode()|.

CrystallineVisualMode                           *hl-CrystallineVisualMode*

The color of the mode label when visual mode is active.

See |crystalline#mode()|.

CrystallineReplaceMode                          *hl-CrystallineReplaceMode*

The color of the mode label when replace mode is active.

See |crystalline#mode()|.

Crystalline                                     *hl-Crystalline*

A color which can be used for the main sections of the statusline.

CrystallineInactive                             *hl-CrystallineInactive*

A color which can be used for inactive statuslines.

CrystallineFill                                 *hl-CrystallineFill*

A color which can be used for the space between the left and right side of the
statusline.

CrystallineTab                                  *hl-CrystallineTab*

The color of tabs which are not currently selected on the bufferline. It can
also be used for regular sections of the tabline.

See |crystalline#bufferline()|.

CrystallineTabType                              *hl-CrystallineTabType*

The color of the tab type label on the bufferline

See |crystalline#bufferline()|.

CrystallineTabSel                               *hl-CrystallineTabSel*

The color of tabs which are currently selected on the bufferline if mode
coloring is not activated.

See |crystalline#bufferline()|.

CrystallineTabFill                              *hl-CrystallineTabFill*

A color which can be used for the space between the left and right side of the
tabline.

EXAMPLE                                         *crystalline-example*

>
  function! StatusLine(current, width)
    let l:s = ''

    if a:current
      let l:s .= crystalline#mode() . crystalline#right_mode_sep('')
    else
      let l:s .= '%#CrystallineInactive#'
    endif
    let l:s .= ' %f%h%w%m%r '
    if a:current
      let l:s .= crystalline#right_sep('', 'Fill') . '%{fugitive#head()}'
    endif

    let l:s .= '%='
    if a:current
      let l:s .= crystalline#left_sep('', 'Fill') . ' %{&paste ?"PASTE ":""}%{&spell?"SPELL ":""}'
      let l:s .= crystalline#left_mode_sep('')
    endif
    if a:width > 80
      let l:s .= ' %{&ft}[%{&fenc!=#""?&fenc:&enc}][%{&ff}] %l/%L %c%V %P '
    else
      let l:s .= ' '
    endif

    return l:s
  endfunction

  function! TabLine()
    let l:vimlabel = has('nvim') ?  ' NVIM ' : ' VIM '
    return crystalline#bufferline(2, len(l:vimlabel), 1) . '%=%#CrystallineTab# ' . l:vimlabel
  endfunction

  let g:crystalline_enable_sep = 1
  let g:crystalline_statusline_fn = 'StatusLine'
  let g:crystalline_tabline_fn = 'TabLine'
  let g:crystalline_theme = 'default'

  set showtabline=2
  set guioptions-=e
  set laststatus=2
<

See <https://github.com/rbong/vim-crystalline> for more examples.

 vim:tw=78:ts=8:ft=help
